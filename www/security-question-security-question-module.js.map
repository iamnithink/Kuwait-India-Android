{"version":3,"sources":["webpack:///./src/app/security-question/security-question.module.ts","webpack:///./src/app/security-question/security-question.page.html","webpack:///./src/app/security-question/security-question.page.scss","webpack:///./src/app/security-question/security-question.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEmB;AAEhE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAoB;KAChC;CACF,CAAC;AAWF;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QATtC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,4EAAoB,CAAC;SACrC,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;;;;ACzBvC,+TAA+T,yEAAyE,6HAA6H,UAAU,4U;;;;;;;;;;;ACA/gB,qCAAqC,6DAA6D,EAAE,sBAAsB,6BAA6B,yBAAyB,EAAE,+CAA+C,moB;;;;;;;;;;;;;;;;;;;;ACA/K;AACT;AACc;AAEgB;AAQvE;IAME,8BAAoB,MAAc,EAAU,WAAwB,EAAU,KAA2B;QAArF,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAsB;QALzG,aAAQ,GAAW,EAAE,CAAC;QACtB,WAAM,GAAW,EAAE,CAAC;QAKZ,mDAAqF,EAAnF,kBAAM,EAAE,kCAAc,EAAE,8BAA2D,CAAC;QAC5F,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,cAAc,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,uCAAQ,GAAR,cAAY,CAAC;IAEb,2CAAY,GAAZ;QAAA,iBAsBC;QArBC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;QAEzB,iGAAiG;QACjG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC3E,UAAC,GAAgB;YACf,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;YACxB,IAAI,GAAG,CAAC,MAAM,KAAK,IAAI,EAAE;gBACvB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,EAAE;oBACnD,KAAK,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,MAAM,EAAE,MAAM,EAAE,KAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAI,CAAC,YAAY,EAAE;iBACvF,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;aAC9C;QACH,CAAC,EACD,aAAG;YACD,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+CAAgB,GAAhB;QACE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAzCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,6HAA4C;;SAE7C,CAAC;+EAO4B,sDAAM,EAAuB,kEAAW,EAAiB,kFAAoB;OAN9F,oBAAoB,CA0ChC;IAAD,2BAAC;CAAA;AA1CgC","file":"security-question-security-question-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SecurityQuestionPage } from './security-question.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SecurityQuestionPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SecurityQuestionPage]\n})\nexport class SecurityQuestionPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" color=\\\"light\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\" style=\\\"height: 20vh; max-height: 20vh\\\">\\n      <h1 class=\\\"big-title\\\" style=\\\"color: white; margin-bottom: 16px\\\">\\n        Security Question\\n      </h1>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <ion-label>{{question}}</ion-label>\\n      <ion-item style=\\\"--padding-start: 0px\\\">\\n        <ion-input placeholder=\\\"Answer\\\" [(ngModel)]=\\\"answer\\\"></ion-input>\\n      </ion-item>\\n      <ion-button class=\\\"login-btn\\\" expand=\\\"block\\\" size=\\\"large\\\" (click)=\\\"gotoPassword()\\\">\\n        NEXT\\n      </ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \":host ion-content {\\n  --background: linear-gradient(#0073d6, #84dffd, #00c0ff); }\\n\\n:host .login-btn {\\n  margin: 32px 0px 0px 0px;\\n  --border-radius: 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL25pdGhpbi9mb2xrc2xvZ2ljL3Rlc3QvS3V3YWl0IEluZGlhIEFuZHJvaWQvc3JjL2FwcC9zZWN1cml0eS1xdWVzdGlvbi9zZWN1cml0eS1xdWVzdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSx3REFBYSxFQUFBOztBQUZqQjtFQUtJLHdCQUF3QjtFQUN4QixvQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NlY3VyaXR5LXF1ZXN0aW9uL3NlY3VyaXR5LXF1ZXN0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgaW9uLWNvbnRlbnQge1xuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMwMDczZDYsICM4NGRmZmQsICMwMGMwZmYpO1xuICB9XG4gIC5sb2dpbi1idG4ge1xuICAgIG1hcmdpbjogMzJweCAwcHggMHB4IDBweDtcbiAgICAtLWJvcmRlci1yYWRpdXM6IDZweDtcbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { CommonError } from \"../models/common-error\";\nimport { UtilsProviderService } from \"../utils/utils-provider.service\";\nimport { IsValidIdRes } from \"../models/is-valid-id-res.interface\";\n\n@Component({\n  selector: \"app-security-question\",\n  templateUrl: \"./security-question.page.html\",\n  styleUrls: [\"./security-question.page.scss\"],\n})\nexport class SecurityQuestionPage implements OnInit {\n  username: string = \"\";\n  answer: string = \"\";\n  question: string;\n  isValidIdRes: IsValidIdRes;\n\n  constructor(private router: Router, private authService: AuthService, private utils: UtilsProviderService) {\n    const { userId, secretQuestion, isValidIdRes } = router.getCurrentNavigation().extras.state;\n    this.username = userId;\n    this.question = secretQuestion.SecretQuestion;\n    this.isValidIdRes = isValidIdRes;\n  }\n\n  ngOnInit() {}\n\n  gotoPassword() {\n    this.answer = this.answer.trim();\n    if (!this.answer) return;\n\n    //this.router.navigate([\"/password\"], { state: { answer: this.answer, userId: this.username } });\n    this.utils.showLoader();\n    this.authService.validateSecretQuestion(this.username, this.answer).subscribe(\n      (res: CommonError) => {\n        this.utils.hideLoader();\n        if (res.Status === \"00\") {\n          this.router.navigate([\"/security-image-and-phrase\"], {\n            state: { answer: this.answer, userId: this.username, isValidIdRes: this.isValidIdRes },\n          });\n        } else {\n          this.utils.showAlert(\"Error\", res.ErrorDesc);\n        }\n      },\n      err => {\n        this.utils.hideLoader();\n        this.utils.showAlert();\n      }\n    );\n  }\n\n  ionViewWillLeave() {\n    this.utils.hideLoader();\n  }\n}\n"],"sourceRoot":""}