{"version":3,"sources":["webpack:///./src/app/password/password.module.ts","webpack:///./src/app/password/password.page.html","webpack:///./src/app/password/password.page.scss","webpack:///./src/app/password/password.page.ts"],"names":[],"mappings":"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","file":"password-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordPage } from './password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PasswordPage]\n})\nexport class PasswordPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"\\\" color=\\\"light\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h1 class=\\\"big-title\\\" style=\\\"color: white\\\">Password</h1>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n      <ion-grid no-padding>\\n        <ion-row no-padding>\\n          <ion-col size=\\\"10\\\" no-padding>\\n            <ion-item style=\\\"--padding-start: 0px\\\">\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input required [type]=\\\"passwordType\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" no-padding style=\\\"padding-top: 15px\\\">\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"didClickPasswordChange()\\\">\\n              <ion-icon *ngIf=\\\"passwordType === 'password'\\\" slot=\\\"icon-only\\\" name=\\\"eye\\\"></ion-icon>\\n              <ion-icon *ngIf=\\\"passwordType === 'text'\\\" slot=\\\"icon-only\\\" name=\\\"eye-off\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-button class=\\\"login-btn\\\" expand=\\\"block\\\" size=\\\"large\\\" (click)=\\\"loginPressed()\\\">\\n        LOGIN\\n      </ion-button>\\n      <div class=\\\"ion-text-center ion-padding\\\">\\n        <span style=\\\"color: var(--ion-color-primary)\\\" (click)=\\\"gotoForgotPassword()\\\">FORGOT PASSWORD</span>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \"ion-content {\\n  --background: linear-gradient(#0073d6, #84dffd, #00c0ff); }\\n\\n.login-btn {\\n  margin: 32px 0px 0px 0px;\\n  --border-radius: 6px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL25pdGhpbi9mb2xrc2xvZ2ljL3Rlc3QvS3V3YWl0IEluZGlhIEFuZHJvaWQvc3JjL2FwcC9wYXNzd29yZC9wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3REFBYSxFQUFBOztBQUVmO0VBQ0Usd0JBQXdCO0VBQ3hCLG9CQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFzc3dvcmQvcGFzc3dvcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjMDA3M2Q2LCAjODRkZmZkLCAjMDBjMGZmKTtcbn1cbi5sb2dpbi1idG4ge1xuICBtYXJnaW46IDMycHggMHB4IDBweCAwcHg7XG4gIC0tYm9yZGVyLXJhZGl1czogNnB4O1xufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { StorageService } from \"../api/storage/storage.service\";\nimport { Router } from \"@angular/router\";\nimport sha256 from \"fast-sha256\";\nimport { AuthService } from \"../api/auth/auth.service\";\nimport { UtilsProviderService } from \"../utils/utils-provider.service\";\nimport { Events, NavController, AlertController } from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-password\",\n  templateUrl: \"./password.page.html\",\n  styleUrls: [\"./password.page.scss\"],\n})\nexport class PasswordPage implements OnInit {\n  password: string;\n\n  passwordType: string = \"password\";\n\n  userId: string;\n\n  constructor(\n    private storage: StorageService,\n    private router: Router,\n    private authService: AuthService,\n    private utils: UtilsProviderService,\n    private events: Events,\n    private navCtrl: NavController,\n    private alertController: AlertController\n  ) {\n    const { userId } = router.getCurrentNavigation().extras.state;\n    this.userId = userId;\n  }\n\n  ngOnInit() {}\n\n  async loginPressed() {\n    this.password = this.password.trim();\n    if (!this.password) return;\n    this.utils.showLoader();\n    //let secs1 = new Date().getTime();\n    // let date = new Date();\n    // //date.setUTCSeconds(secs1 / 1000);\n    // let hrs = String(date.getHours());\n\n    // if (date.getHours() === 0) {\n    //   hrs = \"22\";\n    // } else if (date.getHours() === 1) {\n    //   hrs = \"23\";\n    // } else if (date.getHours() === 2) {\n    //   hrs = \"00\";\n    // } else {\n    //   hrs = String(date.getHours() - 2);\n    // }\n\n    // console.log(hrs, hrs.length);\n    // let inMin = date.getMinutes();\n\n    // if (inMin > 30) {\n    //   inMin = inMin - 30;\n    // } else {\n    //   hrs = String(Number(hrs) - 1);\n    //   inMin = inMin + 30;\n    // }\n\n    // let mins = String(inMin);\n    // if (mins.length === 1) {\n    //   mins = \"0\" + mins;\n    // }\n    // let secs = String(date.getSeconds());\n    // if (secs.length === 1) {\n    //   secs = \"0\" + secs;\n    // }\n    // if (hrs.length === 1) {\n    //   hrs = \"0\" + hrs;\n    // }\n    let date = new Date();\n    let inhrs = date.getUTCHours() + 3;\n    if (inhrs > 23) {\n      inhrs = 24 - inhrs;\n    }\n    let mins = String(date.getUTCMinutes());\n    let secs = String(date.getUTCSeconds());\n    if (secs.length === 1) {\n      secs = \"0\" + secs;\n    }\n    let hrs = String(inhrs);\n    if (hrs.length === 1) {\n      hrs = \"0\" + hrs;\n    }\n    if (mins.length === 1) {\n      mins = \"0\" + mins;\n    }\n    let toBeHashed = this.password + \"-\" + hrs + mins + secs + \"-\";\n    console.log(toBeHashed);\n\n    //this.utils.showAlert(\"DEBUG\", toBeHashed);\n\n    let token;\n    try {\n      token = await this.storage.getFcmToken();\n    } catch {\n      console.log(\"error getting token\");\n    }\n\n    this.authService.getMyIp(token).subscribe(ip => {\n      toBeHashed = toBeHashed + ip.IPaddress;\n      console.log(toBeHashed);\n      this.digestMessage(toBeHashed).then(digestValue => {\n        const hashArray = Array.from(new Uint8Array(digestValue));\n        const hashHex = hashArray.map(b => (\"00\" + b.toString(16)).slice(-2)).join(\"\");\n        console.log(\"SHA VALUE\", hashHex);\n        this.authService.login(this.userId, hrs + \"\" + mins + \"\" + secs, toBeHashed).subscribe(async res => {\n          if (res && res.Status === \"00\" && res.SessionToken) {\n            // this.utils.hideLoader();\n            this.authService.getOtp().subscribe(\n              async otpRes => {\n                this.utils.hideLoader();\n                const alert = await this.alertController.create({\n                  header: \"Please enter OTP to complete login.\",\n                  inputs: [\n                    {\n                      name: \"otp\",\n                      type: \"number\",\n                      max: 999999,\n                      min: 0,\n                      placeholder: \"OTP\",\n                    },\n                  ],\n                  buttons: [\n                    {\n                      text: \"Cancel\",\n                      role: \"cancel\",\n                    },\n                    {\n                      text: \"Submit\",\n                      handler: data => {\n                        if (data.otp === otpRes.OTP) {\n                          this.utils.showToast(\"OTP verified successfully.\", 5000);\n\n                          this.utils.showLoader();\n                          this.authService.getApplicant(this.userId).subscribe(\n                            user => {\n                              // user.data = JSON.parse(user.data);\n                              this.utils.hideLoader();\n                              let data = { ...user, UserID: this.userId, token: res.SessionToken };\n                              this.storage.login(data, res.SessionToken).then(() => {\n                                // this.events.publish(\"logged-in\", user);\n                                //this.router.navigate([\"/home\"]);\n                                this.navCtrl.navigateRoot(\"/home\");\n                              });\n                            },\n                            err => {\n                              this.utils.hideLoader();\n                            }\n                          );\n                        } else {\n                          // this.isOtpVerified = false;\n                          this.utils.showToast(\"OTP verification failed. Please try again.\");\n                        }\n                      },\n                    },\n                  ],\n                });\n                await alert.present();\n              },\n              err => {\n                this.utils.hideLoader();\n              }\n            );\n          } else {\n            this.utils.hideLoader();\n            this.utils.showAlert(\"Error\", res.ErrorDesc);\n          }\n        });\n      });\n    });\n    // this.storage.login(this.password).then(res => {\n    //   if (res) {\n    //     this.router.navigate(['/home'])\n    //   }\n    // })\n    //this.router.navigate(['/security-question'], {state: { username: this.username }})\n  }\n\n  digestMessage(message) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(message);\n    return window.crypto.subtle.digest(\"SHA-256\", data);\n  }\n\n  ionViewWillLeave() {\n    this.utils.hideLoader();\n  }\n\n  didClickPasswordChange() {\n    this.passwordType = this.passwordType === \"text\" ? \"password\" : \"text\";\n  }\n  \n  gotoForgotPassword() {\n    this.router.navigate([\"/forgot-password\"]);\n  }\n}\n"],"sourceRoot":""}